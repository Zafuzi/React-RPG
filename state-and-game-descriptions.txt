The state for this game will most likely become very complex.

I need state for conditional UI rendering, and state for the character

UI State:

NavBar/AuthButton State:
    hasCreatedACharacter: Determines if a user has created a character or not. This comes from the user's character data (store and firebase), and is read when the page is reloaded and if the user has logged in).

    hasLoggedIn:  Determines if the user has logged in. If they have not logged in, then the navbar does nothing and presents no links. The user must log in first, and if they have created a character then the HUB link shows up. And if they have not created a character, then the create a character link shows up.

Character State:

introText: 0-5 - Will allow the user to click a button to progress the intro text, after it hits 5, the player should be able to view the zones and pylons.

The three Pylon states will allow the HUB to show the information of if a character has activated a pylon or not. Each pylon will require a specific relic from a zone to activate.
pylonAlpha: false
pylonBeta: false
pylonGamma: false
name: name, - Self Explanitory, the character's name
enlightenment: 1, - Traditional Character Level called Enlightenment
spark: 1, - Similar to Strength, used for Battling
luminosity: 1, - A unique stat that will be used to determine if a character can explore a zone/ruin freely or not
items: [] - The character's items
    


Game Mechanics - 

Primarily revolving around exploring areas within the Zones. Most likely just a single Explore action while in the zone. This will be RNG based where you might get an event, or a combat might start. 

Structure - 
Structure a zone like this: ZoneOneComponent (press explore button) -> Randomizes 1-100 -> Random number picks Event or Battle or Whatever -> Load corresponding component (Hard coded information for each within the ZoneOneComponent)

Future Features: Save Button, Character Progression, Items?Rng?


Combat:

Bound Fragments - Exp you spend to level up stats.
Unbound Fragments - Can lose them when you die. Need to Bind the fragments to the tree.

Enlightenment: Main Power Level?
Energy: Health?
Spark: Attack Stat?
Luminosity: Defense Stat?


Wednesday 3/12 ToDo List:

Move console.logs in the combat, into the event log on the page.
Add monster tiers. A new monster stat that will determine it's loot drops and difficulty, monster level unlocks will be character's enlightenment +25%
New loot tiers that will drop, possible 1-maxRoll, or maybe split into tiers. Not determined.
Allow items to be fragmented into bound fragments (based off roll values?)
Limit inventory to 10, add buffer item slot. Buffer item and all items after will be destroyed upon next loot. Keep fragmenting items to clear up inventory.
Add Bank window, and allow items to be banked. Bank slots must be purchased for bound fragments. 500/5000/15000/50000/100000





Item and Market Ideas(March 15th)

Add proper tiers to items, and user's ID who dropped it. Possibly drop items as a currency that you then use at a market to unbox? That might make items more special. 

Example Situation: User gets item currency drop from a monster. Really wants to see the item! Heads to the new Portal where the market exists and uses the vendor to unbox the item and add it to their inventory. Possibly pay fragments to influence item ranges?

Example Item

Item {
    name: "Dog Bone",
    energy: 15,
    spark: 30,
    luminosity: 25,
    tier: 2,
    character/user ID: 1239090asd907asd872
}

Spawn items with tiers, so that I can add items that can reroll the item. Not sure if I want to split each stat into tier values, or just do a range of 0 - whatever.

Item Reroll Currency!!!

Market Information:

If we have the user's ID who looted the item, then we can tie that into the market and will be able to track who is selling what. Have a user post to the market (an array of items?), and then save it to firebase. Then when someone buys the item, have the market check the user/character ID on the item and send the respective moneys to the right person.